{"ast":null,"code":"var _jsxFileName = \"D:\\\\Masai\\\\Coding Assignment\\\\U6\\\\Todo\\\\Redux_hooks-Todo\\\\todos-main\\\\my-app\\\\src\\\\Components\\\\TodosCreate.jsx\",\n    _s = $RefreshSig$();\n\nimport { Action } from \"history\";\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { getTodos, getTodosData } from \"../Redux/Todos/Actions\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initState = {\n  title: \"\",\n  description: \"\",\n  subtasks: [],\n  status: \"\",\n  tags: {\n    official: false,\n    personal: false,\n    others: false\n  },\n  date: \"\"\n};\n\nconst reducer = (state, _ref) => {\n  let {\n    type,\n    payload\n  } = _ref;\n\n  switch (type) {\n    case \"UPDATE_TITLE\":\n      return { ...state,\n        title: payload\n      };\n\n    case \"UPDATE_DESCRIPTION\":\n      return { ...state,\n        description: payload\n      };\n\n    case \"UPDATE_STATUS\":\n      return { ...state,\n        status: payload\n      };\n\n    case \"UPDATE_TAGS\":\n      return { ...state,\n        tags: { ...state.tags,\n          ...payload\n        }\n      };\n\n    case \"CHANGE_DATE\":\n      return { ...state,\n        date: payload\n      };\n\n    case \"UPDATE_SUBTASK\":\n      return { ...state,\n        subtasks: [...state.subtasks, payload]\n      };\n\n    case \"TOGGLE_SUBTASK\":\n      const subtasksAfterToggle = state.subtasks.map(el => el.id === payload.id ? { ...el,\n        subtaskStatus: payload.status\n      } : el);\n      return { ...state,\n        subtasks: subtasksAfterToggle\n      };\n\n    case \"DELETE_SUBTASK\":\n      const subatsksAfterDeletion = state.subtasks.filter(el => el.id !== payload);\n      return { ...state,\n        subtasks: subatsksAfterDeletion\n      };\n\n    case \"RESET\":\n      return { ...initState\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function TodosCreate() {\n  _s();\n\n  const [state, dispatch] = React.useReducer(reducer, initState);\n  const reduxDispatch = useDispatch();\n  const {\n    title,\n    description,\n    subtasks,\n    status,\n    tags,\n    date\n  } = state;\n  const [subTaskInput, setSubTaskInput] = useState(\"\");\n\n  const createNewTask = () => {\n    const payload = { ...state\n    };\n    fetch('http://localhost:8080/todos', {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(() => reduxDispatch(getTodosData())) // make the input empty\n    .then(() => dispatch({\n      type: \"RESET\"\n    }));\n  };\n\n  const {\n    official,\n    personal,\n    others\n  } = tags; // console.log(status);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"TITLE\",\n      value: title,\n      onChange: e => {\n        dispatch({\n          type: \"UPDATE_TITLE\",\n          payload: e.target.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"DESCRIPTION\",\n      value: description,\n      onChange: e => {\n        dispatch({\n          type: \"UPDATE_DESCRIPTION\",\n          payload: e.target.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          checked: status === \"Todo\",\n          onChange: () => dispatch({\n            type: \"UPDATE_STATUS\",\n            payload: \"Todo\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), \"Todo\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          checked: status === \"InProgress\",\n          onChange: () => dispatch({\n            type: \"UPDATE_STATUS\",\n            payload: \"InProgress\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), \"In Progress\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          checked: status === \"Done\",\n          onChange: () => dispatch({\n            type: \"UPDATE_STATUS\",\n            payload: \"Done\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), \"Done\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: official,\n          onChange: e => {\n            dispatch({\n              type: \"UPDATE_TAGS\",\n              payload: {\n                official: e.target.checked\n              }\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), \" OFFICIAL\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: personal,\n          onChange: e => {\n            dispatch({\n              type: \"UPDATE_TAGS\",\n              payload: {\n                personal: e.target.checked\n              }\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), \" PERSONAL\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: others,\n          onChange: e => {\n            dispatch({\n              type: \"UPDATE_TAGS\",\n              payload: {\n                others: e.target.checked\n              }\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), \" OTHERS\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: date,\n      onChange: e => {\n        dispatch({\n          type: \"CHANGE_DATE\",\n          payload: e.target.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 12\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create sub task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: subTaskInput,\n      onChange: e => {\n        setSubTaskInput(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        const payload = {\n          id: uuidv4(),\n          subtaskTitle: subTaskInput,\n          subtaskStatus: false\n        };\n        dispatch({\n          type: \"UPDATE_SUBTASK\",\n          payload\n        }); // make the input empty\n\n        setSubTaskInput(\"\");\n      },\n      children: \" add sub task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 39\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: subtasks.map(subtask => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: subtask.subtaskStatus,\n            onChange: e => {\n              dispatch({\n                type: \"TOGGLE_SUBTASK\",\n                payload: {\n                  id: subtask.id,\n                  status: e.target.checked\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), subtask.subtaskTitle]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            dispatch({\n              type: \"DELETE_SUBTASK\",\n              payload: subtask.id\n            });\n          },\n          children: \"delete subtask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, subtask.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createNewTask,\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 60\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 66\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 72\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodosCreate, \"KTxpWpigH3CwNK5QosQ/L0rUE2c=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TodosCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosCreate\");","map":{"version":3,"sources":["D:/Masai/Coding Assignment/U6/Todo/Redux_hooks-Todo/todos-main/my-app/src/Components/TodosCreate.jsx"],"names":["Action","React","useState","v4","uuidv4","getTodos","getTodosData","useDispatch","initState","title","description","subtasks","status","tags","official","personal","others","date","reducer","state","type","payload","subtasksAfterToggle","map","el","id","subtaskStatus","subatsksAfterDeletion","filter","TodosCreate","dispatch","useReducer","reduxDispatch","subTaskInput","setSubTaskInput","createNewTask","fetch","method","body","JSON","stringify","headers","then","e","target","value","checked","subtaskTitle","subtask"],"mappings":"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","sourcesContent":["import { Action } from \"history\";\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport {getTodos, getTodosData} from \"../Redux/Todos/Actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst initState = {\n  title: \"\",\n  description: \"\",\n  subtasks: [],\n  status: \"\",\n  tags: { official: false, personal: false, others: false },\n  date: \"\",\n};\n\nconst reducer = (state, { type, payload }) => {\n  switch (type) {\n    case \"UPDATE_TITLE\":\n      return { ...state, title: payload };\n\n    case \"UPDATE_DESCRIPTION\":\n      return { ...state, description: payload };\n\n    case \"UPDATE_STATUS\":\n      return { ...state, status: payload };\n\n    case \"UPDATE_TAGS\":\n      return { ...state, tags: { ...state.tags, ...payload } };\n\n    case \"CHANGE_DATE\":\n      return {...state, date:payload};\n\n    case \"UPDATE_SUBTASK\":\n      return {...state, subtasks: [...state.subtasks,payload]}\n\n    case \"TOGGLE_SUBTASK\":\n      const subtasksAfterToggle = state.subtasks.map((el) => \n      el.id === payload.id ? {...el , subtaskStatus: payload.status} : el);\n      return {...state, subtasks: subtasksAfterToggle};\n\n    case \"DELETE_SUBTASK\":\n      const subatsksAfterDeletion = state.subtasks.filter((el) => el.id !== payload);\n      return {...state, subtasks: subatsksAfterDeletion};\n\n    case \"RESET\":\n    return{...initState}\n\n    default:\n      return state;\n  }\n};\n\nexport default function TodosCreate() {\n  const [state, dispatch] = React.useReducer(reducer, initState);\n  const reduxDispatch = useDispatch()\n\n  const { title, description, subtasks, status, tags, date } = state;\n\n  const [subTaskInput, setSubTaskInput] = useState(\"\");\n\n  const createNewTask = () => {\n    const payload = { ...state};\n\n    fetch('http://localhost:8080/todos' , {\n      method : \"POST\",\n      body: JSON.stringify(payload),\n      headers: {\"Content-Type\" : \"application/json\"}\n    }).then(() => reduxDispatch(getTodosData()))\n    // make the input empty\n    .then(() => dispatch({type: \"RESET\"}))\n\n  }\n \n  const{official, personal, others} = tags\n  // console.log(status);\n\n  return (\n    <div>\n      <h1>Todos</h1>\n\n      <input\n        type=\"text\"\n        placeholder=\"TITLE\"\n        value={title}\n        onChange={(e) => {\n          dispatch({ type: \"UPDATE_TITLE\", payload: e.target.value });\n        }}\n      />\n      <br />\n      <br />\n\n      <input\n        type=\"text\"\n        placeholder=\"DESCRIPTION\"\n        value={description}\n        onChange={(e) => {\n          dispatch({ type: \"UPDATE_DESCRIPTION\", payload: e.target.value });\n        }}\n      />\n      <br />\n      <br />\n\n      <div>\n        <label>\n          <input\n            type=\"radio\"\n            checked={status === \"Todo\"}\n            onChange={() =>\n              dispatch({ type: \"UPDATE_STATUS\", payload: \"Todo\" })\n            }\n          />Todo\n        </label><br />\n\n        <label>\n          <input\n            type=\"radio\"\n            checked={status === \"InProgress\"}\n            onChange={() =>\n              dispatch({ type: \"UPDATE_STATUS\", payload: \"InProgress\" })\n            }\n          />In Progress\n        </label><br />\n\n        <label>\n          <input\n            type=\"radio\"\n            checked={status === \"Done\"}\n            onChange={() =>\n              dispatch({ type: \"UPDATE_STATUS\", payload: \"Done\" })\n            }\n          />Done\n        </label><br />\n      </div><br />\n\n      <div>\n        <label>\n          <input type=\"checkbox\" checked={official} onChange={(e) => {\n            dispatch({\n              type: \"UPDATE_TAGS\",\n              payload: { official: e.target.checked }\n            })\n          }} /> OFFICIAL\n        </label><br />\n\n        <label>\n          <input type=\"checkbox\" checked={personal} onChange={(e) => {\n            dispatch({\n              type: \"UPDATE_TAGS\",\n              payload: { personal: e.target.checked }\n            })\n          }} /> PERSONAL\n        </label><br />\n\n        <label>\n          <input type=\"checkbox\" checked={others} onChange={(e) => {\n            dispatch({\n              type: \"UPDATE_TAGS\",\n              payload: { others: e.target.checked }\n            })\n          }} /> OTHERS\n        </label><br />\n      </div><br />\n\n      <input type=\"date\" \n      value={date}\n      onChange = {(e) => {\n        dispatch({\n          type: \"CHANGE_DATE\",\n          payload: e.target.value \n        })\n      }}/> <br /> <br />\n\n      <h1>Create sub task</h1>\n\n      <input type=\"text\" value={subTaskInput} onChange = {(e) => {\n        setSubTaskInput(e.target.value)\n      }} />\n\n      <button onClick={ () => {\n        const payload = {\n          id : uuidv4(),\n          subtaskTitle : subTaskInput,\n          subtaskStatus: false\n        }\n\n        dispatch({type: \"UPDATE_SUBTASK\" , payload});\n        // make the input empty\n        setSubTaskInput(\"\")\n      }} > add sub task</button><br /><br />\n\n      <div>\n        {\n          subtasks.map((subtask) => (\n            <div key = {subtask.id}>\n              <label>\n              <input type=\"checkbox\" \n              checked= {subtask.subtaskStatus}\n              onChange ={(e) => {\n                dispatch({type: \"TOGGLE_SUBTASK\" ,\n                payload:{id: subtask.id, status: e.target.checked}})\n              }}\n              />{subtask.subtaskTitle}\n            </label>\n\n            <button onClick={() => {\n              dispatch({\n                type: \"DELETE_SUBTASK\",\n                payload: subtask.id \n              })\n            }}>delete subtask</button>\n            </div>\n          ))\n        }\n      </div>\n\n      <button onClick={ createNewTask}>Create Task</button><br /><br /><br />\n\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}