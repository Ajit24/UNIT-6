{"ast":null,"code":"import { LOGIN_FAILURE, LOGIN_LOADING, LOGIN_SUCCESS, LOGOUT } from \"./Action\";\nconst initState = {\n  error: false,\n  loading: false,\n  isAuthenticate: false,\n  token: \"\",\n  userName: \"\"\n};\nexport const loginReducer = function () {\n  let store = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case LOGIN_LOADING:\n      return { ...store,\n        loading: true\n      };\n\n    case LOGIN_SUCCESS:\n      return { ...store,\n        error: false,\n        loading: false,\n        isAuthenticate: true,\n        token: payload.token,\n        userName: payload.username\n      };\n\n    case LOGIN_FAILURE:\n      return { ...initState\n      };\n\n    case LOGOUT:\n      return { ...store,\n        error: false,\n        loading: false,\n        isAuthenticate: false,\n        token: \"\",\n        userName: \"\"\n      };\n\n    default:\n      return store;\n  }\n};","map":{"version":3,"sources":["D:/Masai/Coding Assignment/U6/Todo/Redux_hooks-Todo/todos-main/my-app/src/Redux/Login/Reducer.jsx"],"names":["LOGIN_FAILURE","LOGIN_LOADING","LOGIN_SUCCESS","LOGOUT","initState","error","loading","isAuthenticate","token","userName","loginReducer","store","type","payload","username"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,aAAvB,EAAsCC,aAAtC,EAAsDC,MAAtD,QAAmE,UAAnE;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAE,KADO;AAEdC,EAAAA,OAAO,EAAG,KAFI;AAGdC,EAAAA,cAAc,EAAE,KAHF;AAIdC,EAAAA,KAAK,EAAG,EAJM;AAKdC,EAAAA,QAAQ,EAAG;AALG,CAAlB;AAQA,OAAO,MAAMC,YAAY,GAAG,YAAwC;AAAA,MAAvCC,KAAuC,uEAA/BP,SAA+B;AAAA,MAApB;AAACQ,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAoB;;AAChE,UAAQD,IAAR;AACI,SAAKX,aAAL;AACI,aAAM,EAAC,GAAGU,KAAJ;AAAWL,QAAAA,OAAO,EAAC;AAAnB,OAAN;;AAEJ,SAAKJ,aAAL;AACI,aAAM,EAAC,GAAGS,KAAJ;AACFN,QAAAA,KAAK,EAAE,KADL;AAEFC,QAAAA,OAAO,EAAG,KAFR;AAGFC,QAAAA,cAAc,EAAE,IAHd;AAIFC,QAAAA,KAAK,EAAGK,OAAO,CAACL,KAJd;AAKFC,QAAAA,QAAQ,EAAGI,OAAO,CAACC;AALjB,OAAN;;AAQJ,SAAKd,aAAL;AACI,aAAO,EACH,GAAGI;AADA,OAAP;;AAIJ,SAAKD,MAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHN,QAAAA,KAAK,EAAE,KAFJ;AAGHC,QAAAA,OAAO,EAAG,KAHP;AAIHC,QAAAA,cAAc,EAAE,KAJb;AAKHC,QAAAA,KAAK,EAAG,EALL;AAMHC,QAAAA,QAAQ,EAAG;AANR,OAAP;;AASJ;AACI,aAAOE,KAAP;AA7BR;AA+BH,CAhCM","sourcesContent":["import {LOGIN_FAILURE, LOGIN_LOADING, LOGIN_SUCCESS , LOGOUT} from \"./Action\"\n\nconst initState = {\n    error: false,\n    loading : false,\n    isAuthenticate: false,\n    token : \"\",\n    userName : \"\"\n};\n\nexport const loginReducer = (store = initState ,{type, payload}) => {\n    switch (type){\n        case LOGIN_LOADING:\n            return{...store, loading:true};\n        \n        case LOGIN_SUCCESS:\n            return{...store,\n                error: false,\n                loading : false,\n                isAuthenticate: true,\n                token : payload.token,\n                userName : payload.username\n            };\n\n        case LOGIN_FAILURE:\n            return {\n                ...initState\n            }\n        \n        case LOGOUT:\n            return {\n                ...store,\n                error: false,\n                loading : false,\n                isAuthenticate: false,\n                token : \"\",\n                userName : \"\"\n            }\n\n        default :\n            return store\n    }\n}"]},"metadata":{},"sourceType":"module"}