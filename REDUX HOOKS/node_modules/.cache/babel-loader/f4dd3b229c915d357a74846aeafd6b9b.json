{"ast":null,"code":"var _jsxFileName = \"D:\\\\Masai\\\\Coding Assignment\\\\U6\\\\Todo\\\\Redux_hooks-Todo\\\\todos-main\\\\my-app\\\\src\\\\Components\\\\TaskItemsDone.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport \"./myApp.css\";\nimport { useDispatch, useSelector } from 'react-redux'; // import {todos} from \"../Redux/Todos/Reducer\"\n\nimport { getTodosData } from \"../Redux/Todos/Actions\";\nimport { useNavigate } from 'react-router-dom'; // import todos from \"../Redux/Todos/Reducer\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskItemsInprogress() {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    todos\n  } = useSelector(state => state.todos);\n  console.log(\"todost\", todos);\n  var todos1 = todos.filter(items => items.status === \"Done\");\n  console.log(\"filter\", todos1);\n  useEffect(() => {\n    dispatch(getTodosData());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: todos1.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskIndiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskIndivFlex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"taskIndivFlexOne\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: e.title\n          }, e.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [e.tags.official && \"Official\", \" \", e.tags.personal && \"Personal\", \" \", e.tags.others && \"Others\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"taskIndivFlexTwo\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: e.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: e.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: e.subtasks.map(el =>\n        /*#__PURE__*/\n        // <div key={el.id}>{el.subtaskTitle}</div>\n        _jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 45\n            }, this), el.subtaskTitle]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 41\n          }, this)\n        }, el.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(`/todos/${e.id}/edit`),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TaskItemsInprogress, \"eQ4Xffi3/n67iDovrtvddtfvSKo=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = TaskItemsInprogress;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskItemsInprogress\");","map":{"version":3,"sources":["D:/Masai/Coding Assignment/U6/Todo/Redux_hooks-Todo/todos-main/my-app/src/Components/TaskItemsDone.jsx"],"names":["React","useEffect","useDispatch","useSelector","getTodosData","useNavigate","TaskItemsInprogress","navigate","dispatch","todos","state","console","log","todos1","filter","items","status","map","e","title","id","tags","official","personal","others","date","description","subtasks","el","subtaskTitle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,SAASC,YAAT,QAA6B,wBAA7B;AAEA,SAASC,WAAT,QAA4B,kBAA5B,C,CAEA;;;AAEA,eAAe,SAASC,mBAAT,GAA+B;AAAA;;AAC1C,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AAEA,QAAMG,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAAYN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAA7B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,KAAtB;AAEA,MAAKI,MAAM,GAAGJ,KAAK,CAACK,MAAN,CAAcC,KAAD,IAAWA,KAAK,CAACC,MAAN,KAAiB,MAAzC,CAAd;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBC,MAArB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,QAAQ,CAACJ,YAAY,EAAb,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAKA,sBACI;AAAA,cAGQS,MAAM,CAACI,GAAP,CAAYC,CAAD,iBACP;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,kCACI;AAAA,sBAAeA,CAAC,CAACC;AAAjB,aAAQD,CAAC,CAACE,EAAV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,uBAAIF,CAAC,CAACG,IAAF,CAAOC,QAAP,IAAmB,UAAvB,OAAoCJ,CAAC,CAACG,IAAF,CAAOE,QAAP,IAAmB,UAAvD,OAAoEL,CAAC,CAACG,IAAF,CAAOG,MAAP,IAAiB,QAArF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI;AAAA,sBAAIN,CAAC,CAACO;AAAN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAA,kBAAIP,CAAC,CAACQ;AAAN;AAAA;AAAA;AAAA;AAAA,cAXJ,eAaI;AAAA,kBAEQR,CAAC,CAACS,QAAF,CAAWV,GAAX,CAAgBW,EAAD;AAAA;AACX;AACA;AAAA,iCACI;AAAA,oCACI;AAAO,cAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,oBADJ,EAC6BA,EAAE,CAACC,YADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUD,EAAE,CAACR,EAAb;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAFR;AAAA;AAAA;AAAA;AAAA,cAbJ,eA4BI;AAAQ,QAAA,OAAO,EAAE,MAAMb,QAAQ,CAAE,UAASW,CAAC,CAACE,EAAG,OAAhB,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAHR;AAAA;AAAA;AAAA;AAAA,UADJ;AAwCH;;GAxDuBd,mB;UACHD,W,EAEAH,W,EAECC,W;;;KALEG,mB","sourcesContent":["import React, { useEffect } from 'react';\nimport \"./myApp.css\";\nimport { useDispatch, useSelector } from 'react-redux';\n// import {todos} from \"../Redux/Todos/Reducer\"\nimport { getTodosData } from \"../Redux/Todos/Actions\";\n\nimport { useNavigate } from 'react-router-dom';\n\n// import todos from \"../Redux/Todos/Reducer\"\n\nexport default function TaskItemsInprogress() {\n    const navigate = useNavigate()\n\n    const dispatch = useDispatch()\n\n    const { todos } = useSelector((state) => state.todos);\n    console.log(\"todost\", todos)\n\n    var  todos1 = todos.filter((items) => items.status === \"Done\")\n    console.log(\"filter\",todos1)\n\n    useEffect(() => {\n        dispatch(getTodosData())\n    }, [])\n\n\n    return (\n        <div>\n            {/* <h1>TaskItem</h1> */}\n            {\n                todos1.map((e) => (\n                    <div className='taskIndiv'>\n                        <div className='taskIndivFlex'>\n                            <div className='taskIndivFlexOne'>\n                                <p key={e.id}>{e.title}</p>\n                                <p>{e.tags.official && \"Official\"} {e.tags.personal && \"Personal\"} {e.tags.others && \"Others\"}</p>\n                            </div>\n                            <div className='taskIndivFlexTwo'>\n                                <p>{e.date}</p>\n                            </div>\n                        </div>\n\n                        <p>{e.description}</p>\n\n                        <div>\n                            {\n                                e.subtasks.map((el) => (\n                                    // <div key={el.id}>{el.subtaskTitle}</div>\n                                    <div key={el.id}>\n                                        <label>\n                                            <input type=\"checkbox\"/>{el.subtaskTitle}\n                                        </label>\n                                    </div>\n                                ))\n                            }\n                        </div>\n\n\n\n                        <button onClick={() => navigate(`/todos/${e.id}/edit`)}>Edit</button>\n \n                    </div>\n                ))\n            }\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}